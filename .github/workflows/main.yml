name: 'main'

on:
  push:
    branches:
    - master
  pull_request:

jobs: 
  Terraform:
    name: 'Terraform-Terratest'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_version: 0.12.21

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.14.6
    # - uses: autero1/action-terraform@v0.1.0
    #   with:
    #       terraform_version: 0.12.21

    - name: Get dependencies
      run: |
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        else
          go get -v -t -d ./...  
        fi

    - name: Run terratest
      working-directory: test/nginx
      run: go test

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: |
       cd terraform/nginx
       terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: |
       cd terraform/nginx
       terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: |
       cd terraform/nginx
       terraform plan

      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: |
       cd terraform/nginx
       terraform apply -auto-approve
