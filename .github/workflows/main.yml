name: 'main'

on:
  push:
    branches:
    - master
  pull_request:

jobs: 
  Terraform:
    name: 'Terraform-Terratest'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2
        
    - name: Terraform version installer
      uses: autero1/action-terraform@v0.1.0
      with:
          terraform_version: 0.13.3

    - name: get commit message
      run: |
           echo ::set-env name=commitmsg::$(git log --format=%B -n 1 ${{ github.event.after }})
    - name: show commit message
      run : echo $commitmsg

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.14.6

    - name: Get dependencies
      run: |
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        else
          go get -v -t -d ./...  
        fi

    - name: Run terratest
      if: contains( env.commitmsg , 'terraform' )
      working-directory: test/${{ env.commitmsg }}
      run: go test

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      if: contains( env.commitmsg , 'terraform/' )
      run: |
       cd ${{ env.commitmsg }}
       terraform init

    - name: Terraform Format
      if: contains( env.commitmsg , 'terraform/' )
      run: |
       cd ${{ env.commitmsg }}
       terraform fmt -check

    - name: Terraform Plan
      if: contains( env.commitmsg , 'terraform/' )
      run: |
       cd ${{ env.commitmsg }}
       terraform plan

    - name: Terraform Apply
      if: github.event_name == 'push' && contains( env.commitmsg , 'terraform/')
      run: |
       cd ${{ env.commitmsg }}
       terraform apply -auto-approve
       curl http://localhost:8000

  


  